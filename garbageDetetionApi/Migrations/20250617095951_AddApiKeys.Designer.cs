// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using garbageDetetionApi.Context;

#nullable disable

namespace garbageDetetionApi.Migrations
{
    [DbContext(typeof(GarbageDbContext))]
    [Migration("20250617095951_AddApiKeys")]
    partial class AddApiKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("garbageDetetionApi.Models.ApiKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("garbageDetetionApi.Models.Garbage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CameraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ConfidenceScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DetectedObject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Humidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Temp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Weather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WindSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Garbages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CameraId = new Guid("d3c1f8b2-4e5f-4a2b-9c3e-8f1b2c3d4e5f"),
                            ConfidenceScore = 0.95m,
                            DetectedObject = "Plastic Bottle",
                            Humidity = 45.0m,
                            ImageName = "plastic_bottle",
                            Latitude = 51.591415m,
                            Longitude = 4.778720m,
                            Temp = 22.5m,
                            TimeStamp = new DateTime(2025, 5, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Weather = "Sunny",
                            WindSpeed = 5.2m
                        },
                        new
                        {
                            Id = 2,
                            CameraId = new Guid("d3c1f8b2-4e5f-4a2b-9c3e-8f1b2c3d4e5f"),
                            ConfidenceScore = 0.89m,
                            DetectedObject = "Can",
                            Humidity = 55.0m,
                            ImageName = "can",
                            Latitude = 51.591415m,
                            Longitude = 4.778720m,
                            Temp = 18.3m,
                            TimeStamp = new DateTime(2025, 5, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Weather = "Cloudy",
                            WindSpeed = 3.8m
                        },
                        new
                        {
                            Id = 3,
                            CameraId = new Guid("d3c1f8b2-4e5f-4a2b-9c3e-8f1b2c3d4e5f"),
                            ConfidenceScore = 0.92m,
                            DetectedObject = "Paper",
                            Humidity = 80.0m,
                            ImageName = "paper",
                            Latitude = 51.591415m,
                            Longitude = 4.778720m,
                            Temp = 16.0m,
                            TimeStamp = new DateTime(2025, 5, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Weather = "Rainy",
                            WindSpeed = 7.1m
                        },
                        new
                        {
                            Id = 4,
                            CameraId = new Guid("d3c1f8b2-4e5f-4a2b-9c3e-8f1b2c3d4e5f"),
                            ConfidenceScore = 0.88m,
                            DetectedObject = "Glass",
                            Humidity = 50.0m,
                            ImageName = "glass",
                            Latitude = 51.591415m,
                            Longitude = 4.778720m,
                            Temp = 20.0m,
                            TimeStamp = new DateTime(2025, 5, 15, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Weather = "Windy",
                            WindSpeed = 12.0m
                        },
                        new
                        {
                            Id = 5,
                            CameraId = new Guid("d3c1f8b2-4e5f-4a2b-9c3e-8f1b2c3d4e5f"),
                            ConfidenceScore = 0.90m,
                            DetectedObject = "Food Wrapper",
                            Humidity = 40.0m,
                            ImageName = "food_wrapper",
                            Latitude = 51.591415m,
                            Longitude = 4.778720m,
                            Temp = 24.0m,
                            TimeStamp = new DateTime(2025, 5, 15, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Weather = "Sunny",
                            WindSpeed = 4.5m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
